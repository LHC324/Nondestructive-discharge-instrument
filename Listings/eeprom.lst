C51 COMPILER V9.60.0.0   EEPROM                                                            08/03/2022 21:14:10 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\eeprom.c LARGE OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Inc;.\SmallRTOS\Inc
                    -) DEBUG OBJECTEXTEND PRINT(.\Listings\eeprom.lst) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          // #include "systemtimer.h"
   3          
   4          /*********************************************************
   5           * 函数名：IapConfigWaitTime()
   6           * 功能：  配置STC8单片机EEPROM的等待时间
   7           * 参数：
   8           * 作者:
   9           * note：
  10           *
  11           **********************************************************/
  12          static void IapConfigWaitTime()
  13          {
  14   1              uint32_t XTAL = FOSC / 1000000;
  15   1      
  16   1              if (XTAL >= 30) //>=30M
  17   1                      IAP_CONTR = 0x80;
  18   1              else if (XTAL >= 24)
  19   1                      IAP_CONTR = 0x81;
  20   1              else if (XTAL >= 20)
  21   1                      IAP_CONTR = 0x82;
  22   1              else if (XTAL >= 12)
  23   1                      IAP_CONTR = 0x83;
  24   1              else if (XTAL >= 6)
  25   1                      IAP_CONTR = 0x84;
  26   1              else if (XTAL >= 3)
  27   1                      IAP_CONTR = 0x85;
  28   1              else if (XTAL >= 2)
  29   1                      IAP_CONTR = 0x86;
  30   1              else
  31   1                      IAP_CONTR = 0x87;
  32   1      }
  33          
  34          /*********************************************************
  35           * 函数名：void IapIdle()
  36           * 功能：
  37           * 参数：
  38           * 作者:
  39           * note：
  40           *
  41           **********************************************************/
  42          void IapIdle()
  43          {
  44   1              IAP_CONTR = 0x00; //关闭IAP功能
  45   1              IAP_CMD = 0x00;   //清除命令寄存器
  46   1              IAP_TRIG = 0x00;  //清除触发寄存器
  47   1              IAP_ADDRH = 0x80; //将地址设置到非IAP区域
  48   1              IAP_ADDRL = 0x00;
  49   1      }
  50          
  51          /*********************************************************
  52           * 函数名：char IapRead(unsigned short addr)
  53           * 功能：  读函数  读出一个字节
  54           * 参数：
C51 COMPILER V9.60.0.0   EEPROM                                                            08/03/2022 21:14:10 PAGE 2   

  55           * 作者：
  56           * note：
  57           *
  58           **********************************************************/
  59          char IapRead(char addr)
  60          {
  61   1              char dat = '\0';
  62   1      
  63   1              IapConfigWaitTime();
  64   1              IAP_CMD = 0x01; // EEPROM读命令
  65   1              IAP_ADDRL = addr & 0xFF;
  66   1              IAP_ADDRH = addr >> 8;
  67   1              IAP_TRIG = 0x5A; //触发指令
  68   1              IAP_TRIG = 0xA5;
  69   1              dat = IAP_DATA;
  70   1      
  71   1              if (IAP_CONTR & 0x10)
  72   1              {
  73   2                      IAP_CONTR &= 0xEF;
  74   2                      return 0x5AA5;
  75   2              }
  76   1              else
  77   1                      return dat;
  78   1      }
  79          
  80          /*********************************************************
  81           * 函数名：void IapProgram(unsigned short addr, char dat)
  82           * 功能：  指定地址写数据
  83           * 参数：
  84           * 作者：
  85           * note：
  86           *
  87           **********************************************************/
  88          void IapProgram(uint16_t addr, uint8_t dat)
  89          {
  90   1              //    IAP_CONTR = WT_12M;//WT_24M;                //使能IAP
  91   1              IapConfigWaitTime();
  92   1              IAP_CMD = 0x02;                                 //设置IAP写命令
  93   1              IAP_ADDRL = (uint8_t)addr;              //设置IAP低地址
  94   1              IAP_ADDRH = (uint8_t)addr >> 8; //设置IAP高地址
  95   1              IAP_DATA = dat;                                 //写IAP数据
  96   1              IAP_TRIG = 0x5a;                                //写触发命令(0x5a)
  97   1              IAP_TRIG = 0xa5;                                //写触发命令(0xa5)
  98   1              //_nop_();
  99   1              //      Delay_ms(5);//延时5毫秒
 100   1              IapIdle(); //关闭IAP功能
 101   1      }
 102          
 103          /*********************************************************
 104           * 函数名：void IapErase(int addr)
 105           * 功能：  擦除指定地址的内容
 106           * 参数：
 107           * 作者：
 108           * note：擦除每次按照512B进行，仅提供首地址即可
 109           *
 110           **********************************************************/
 111          void IapErase(uint16_t addr)
 112          {
 113   1              //    IAP_CONTR = WT_12M;//WT_24M;                         //使能IAP
 114   1              IapConfigWaitTime();
 115   1              IAP_CMD = 0x03;                                 //设置IAP擦除命令
 116   1              IAP_ADDRL = (uint8_t)addr;              //设置IAP低地址
C51 COMPILER V9.60.0.0   EEPROM                                                            08/03/2022 21:14:10 PAGE 3   

 117   1              IAP_ADDRH = (uint8_t)addr >> 8; //设置IAP高地址
 118   1              IAP_TRIG = 0x5a;                                //写触发命令(0x5a)
 119   1              IAP_TRIG = 0xa5;                                //写触发命令(0xa5)
 120   1              //_nop_();                                    //
 121   1              IapIdle(); //关闭IAP功能
 122   1                                 // Delay_ms(4); //延时5毫秒
 123   1      }
 124          
 125          /*********************************************************
 126           * 函数名：void EEPROM_writeString(unsigned short Address,unsigned char *Pdata,unsigned short length);
 127           * 功能：  指定地址 写入数据
 128           * 参数：
 129           * 作者：
 130           * note：写数据一般请按照一个扇区一个扇区的来写，不然在擦除数据的时候会造
             -成数据丢失
 131           * 一个扇区的大小是 512字节
 132           *
 133           *
 134           *
 135           ***********************************************************************************/
 136          void IapWrites(uint16_t addr, const uint8_t *str, uint16_t len)
 137          {
 138   1              if (str)
 139   1              {
 140   2                      IapErase(addr);
 141   2                      while (len--)
 142   2                      {
 143   3                              IapProgram(addr, *str);
 144   3                              if (IapRead(addr) != *str)
 145   3                                      break;
 146   3                              addr++, str++;
 147   3                      }
 148   2              }
 149   1      }
 150          
 151          void Iap_Reads(uint16_t addr, uint8_t *str, uint16_t len)
 152          {
 153   1              if (str)
 154   1              {
 155   2                      while (len--)
 156   2                      {
 157   3                              *str++ = IapRead(addr++);
 158   3                      }
 159   2              }
 160   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    451    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      24
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
