C51 COMPILER V9.60.0.0   EEPROM                                                            01/08/2023 15:24:25 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE EEPROM
OBJECT MODULE PLACED IN .\Objects\eeprom.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Src\eeprom.c LARGE OMF2 OPTIMIZE(9,SPEED) BROWSE INCDIR(.\Inc;.\SmallRTO
                    -S\Inc) DEBUG PRINT(.\Listings\eeprom.lst) OBJECT(.\Objects\eeprom.obj)

line level    source

   1          #include "eeprom.h"
   2          
   3          /*********************************************************
   4           * 函数名：IapConfigWaitTime()
   5           * 功能：  配置STC8单片机EEPROM的等待时间
   6           * 参数：
   7           * 作者:
   8           * note：
   9           *
  10           **********************************************************/
  11          static void IapConfigWaitTime()
  12          {
  13   1              uint32_t XTAL = FOSC / 1000000;
  14   1      
  15   1              if (XTAL >= 30) //>=30M
  16   1                      IAP_CONTR = 0x80;
  17   1              else if (XTAL >= 24)
  18   1                      IAP_CONTR = 0x81;
  19   1              else if (XTAL >= 20)
  20   1                      IAP_CONTR = 0x82;
  21   1              else if (XTAL >= 12)
  22   1                      IAP_CONTR = 0x83;
  23   1              else if (XTAL >= 6)
  24   1                      IAP_CONTR = 0x84;
  25   1              else if (XTAL >= 3)
  26   1                      IAP_CONTR = 0x85;
  27   1              else if (XTAL >= 2)
  28   1                      IAP_CONTR = 0x86;
  29   1              else
  30   1                      IAP_CONTR = 0x87;
  31   1      }
  32          
  33          /*********************************************************
  34           * 函数名：void IapIdle()
  35           * 功能：
  36           * 参数：
  37           * 作者:
  38           * note：
  39           *
  40           **********************************************************/
  41          void IapIdle()
  42          {
  43   1              IAP_CONTR = 0x00; // 关闭IAP功能
  44   1              IAP_CMD = 0x00;   // 清除命令寄存器
  45   1              IAP_TRIG = 0x00;  // 清除触发寄存器
  46   1              IAP_ADDRH = 0x80; // 将地址设置到非IAP区域
  47   1              IAP_ADDRL = 0x00;
  48   1      }
  49          
  50          /*********************************************************
  51           * 函数名：char IapRead(unsigned short addr)
  52           * 功能：  读函数  读出一个字节
  53           * 参数：
  54           * 作者：
C51 COMPILER V9.60.0.0   EEPROM                                                            01/08/2023 15:24:25 PAGE 2   

  55           * note：
  56           *
  57           **********************************************************/
  58          char IapRead(uint16_t addr)
  59          {
  60   1      #if (1 == EEPROM_USING_MOVC)
  61   1              addr += IAP_OFFSET;                                       // 使用 MOVC 读取 EEPROM 需要加上相应的偏移
  62   1              return *(unsigned char code *)(addr); // 使用 MOVC 读取数据
  63   1      #else
                      char dat = '\0';
              
                      IapConfigWaitTime();
                      IAP_CMD = 0x01; // EEPROM读命令
                      IAP_ADDRL = addr & 0xFF;
                      IAP_ADDRH = addr >> 8;
                      IAP_TRIG = 0x5A; // 触发指令
                      IAP_TRIG = 0xA5;
                      dat = IAP_DATA;
              
                      if (IAP_CONTR & 0x10)
                      {
                              IAP_CONTR &= 0xEF;
                              return 0x5AA5;
                      }
                      else
                              return dat;
              #endif
  82   1      }
  83          
  84          /*********************************************************
  85           * 函数名：void IapProgram(unsigned short addr, char dat)
  86           * 功能：  指定地址写数据
  87           * 参数：
  88           * 作者：
  89           * note：
  90           *
  91           **********************************************************/
  92          void IapProgram(uint16_t addr, uint8_t dat)
  93          {
  94   1              IapConfigWaitTime();
  95   1              IAP_CMD = 0x02;            // 设置IAP写命令
  96   1              IAP_ADDRL = addr;          // 设置IAP低地址
  97   1              IAP_ADDRH = addr >> 8; // 设置IAP高地址
  98   1              IAP_DATA = dat;            // 写IAP数据
  99   1              IAP_TRIG = 0x5a;           // 写触发命令(0x5a)
 100   1              IAP_TRIG = 0xa5;           // 写触发命令(0xa5)
 101   1              //_nop_();
 102   1              //      Delay_ms(5);//延时5毫秒
 103   1              IapIdle(); // 关闭IAP功能
 104   1      }
 105          
 106          /*********************************************************
 107           * 函数名：void IapErase(int addr)
 108           * 功能：  擦除指定地址的内容
 109           * 参数：
 110           * 作者：
 111           * note：擦除每次按照512B进行，仅提供首地址即可
 112           *
 113           **********************************************************/
 114          void IapErase(uint16_t addr)
 115          {
 116   1              IapConfigWaitTime();
C51 COMPILER V9.60.0.0   EEPROM                                                            01/08/2023 15:24:25 PAGE 3   

 117   1              IAP_CMD = 0x03;            // 设置IAP擦除命令
 118   1              IAP_ADDRL = addr;          // 设置IAP低地址
 119   1              IAP_ADDRH = addr >> 8; // 设置IAP高地址
 120   1              IAP_TRIG = 0x5a;           // 写触发命令(0x5a)
 121   1              IAP_TRIG = 0xa5;           // 写触发命令(0xa5)
 122   1              //_nop_();                                    //
 123   1              IapIdle(); // 关闭IAP功能
 124   1                                 //  Delay_ms(4); //延时5毫秒
 125   1      }
 126          
 127          /*********************************************************
 128           * 函数名：void EEPROM_writeString(unsigned short Address,unsigned char *Pdata,unsigned short length);
 129           * 功能：  指定地址 写入数据
 130           * 参数：
 131           * 作者：
 132           * note：写数据一般请按照一个扇区一个扇区的来写，不然在擦除数据的时候会造
             -成数据丢失
 133           * 一个扇区的大小是 512字节
 134           *
 135           *
 136           *
 137           ***********************************************************************************/
 138          void IapWrites(uint16_t addr, const uint8_t *str, uint16_t len)
 139          {
 140   1              if (str)
 141   1              {
 142   2                      IapErase(addr);
 143   2                      while (len--)
 144   2                      {
 145   3                              IapProgram(addr, *str);
 146   3                              if (IapRead(addr) != *str)
 147   3                                      break;
 148   3                              addr++, str++;
 149   3                      }
 150   2              }
 151   1      }
 152          
 153          void Iap_Reads(uint16_t addr, uint8_t *str, uint16_t len)
 154          {
 155   1              if (str)
 156   1              {
 157   2                      while (len--)
 158   2                      {
 159   3                              *str++ = IapRead(addr++);
 160   3                      }
 161   2              }
 162   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    409    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      23
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.0.0   EEPROM                                                            01/08/2023 15:24:25 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
